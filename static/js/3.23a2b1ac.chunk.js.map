{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","id","name","className","s","dialog","to","activeClassName","active","Message","text","message","maxLength","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","handleSubmit","onSubmit","Field","component","TextArea","validate","required","Dialogs","dialogs","messages","addMessage","dialogsList","map","dialogItem","key","messagesList","messageItem","dialogs_items","value","newMessageText","compose","withAuthRedirect","connect","dialogsReducer","sendMessageActionCreator"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,SAAW,4B,oBCA/GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,oBCA3DD,EAAOC,QAAU,CAAC,QAAU,2B,iHCSbC,MANf,YAA+B,IAAbC,EAAY,EAAZA,GAAIC,EAAQ,EAARA,KAClB,OAAO,yBAAKC,UAAWC,IAAEC,QACrB,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAIM,gBAAiBH,IAAEI,QAASN,K,kBCGpDO,MANf,YAA4B,IAATC,EAAQ,EAARA,KACf,OAAO,yBAAKP,UAAWC,IAAEO,SACnBD,I,0CCGJE,EAAYC,YAAiB,IAkB7BC,EAAsBC,YAAU,CAClCC,KAAM,aACNC,gBAHgB,SAACC,EAAQC,GAAT,OAAsBA,EAASC,YAAM,iBAC7BL,EAjBL,SAAC,GAAsB,IAApBM,EAAmB,EAAnBA,aACtB,OACI,0BAAMC,SAAUD,GACZ,6BACI,kBAACE,EAAA,EAAD,CACIrB,KAAK,iBACLsB,UAAWC,IACXC,SAAU,CAACC,IAAUf,MAG7B,6BACI,iDAiCDgB,MAtBf,YAAqD,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC5BC,EAAcH,EACfI,KAAI,SAAAC,GAAU,OAAI,kBAAC,EAAD,CAAQhC,KAAMgC,EAAWhC,KAAMiC,IAAKD,EAAWjC,GAAIA,GAAIiC,EAAWjC,QACnFmC,EAAeN,EAChBG,KAAI,SAAAI,GAAW,OAAI,kBAAC,EAAD,CAAS3B,KAAM2B,EAAY3B,KAAMyB,IAAKE,EAAYpC,QAK1E,OAAO,yBAAKE,UAAWC,IAAEyB,SACrB,yBAAK1B,UAAWC,IAAEkC,eACbN,GAEL,6BACI,yBAAK7B,UAAWC,IAAE0B,UACbM,GAEL,kBAACtB,EAAD,CAAqBQ,SAZhB,SAAAiB,GACTR,EAAWQ,EAAMC,sB,wBClBVC,sBACXC,IACAC,aAfoB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACvB,MAAO,CACHf,QAASe,EAAef,QACxBC,SAAUc,EAAed,SACzBU,eAAgBI,EAAeJ,mBAGZ,SAACrB,GACxB,MAAO,CACHY,WAAY,SAAArB,GAAI,OAAIS,EAAS0B,YAAyBnC,SAI/C+B,CAGbb","file":"static/js/3.23a2b1ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__31ttC\",\"dialogs_items\":\"Dialogs_dialogs_items__NlteF\",\"messages\":\"Dialogs_messages__1XfRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__3iZHL\",\"active\":\"Dialog_active__2LX2w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1Ow2U\"};","import React from 'react'\r\nimport s from './Dialog.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Dialog({ id, name }) {\r\n    return <div className={s.dialog}>\r\n        <NavLink to={\"/dialogs/\" + id} activeClassName={s.active}>{name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default Dialog\r\n","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nfunction Message({ text }) {\r\n    return <div className={s.message}>\r\n        { text }\r\n    </div>\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport Dialog from './Dialog/Dialog'\r\nimport Message from './Message/Message'\r\nimport { Field, reduxForm, reset } from 'redux-form'\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators'\r\nimport { TextArea } from '../Common/FormControls/FormControls'\r\n\r\nconst maxLength = maxLengthCreator(50)\r\nconst AddMessageForm = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name=\"newMessageText\"\r\n                    component={TextArea}\r\n                    validate={[required, maxLength]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst afterSubmit = (result, dispatch) => dispatch(reset('addMessage'))\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'addMessage',\r\n    onSubmitSuccess: afterSubmit\r\n})(AddMessageForm)\r\n\r\nfunction Dialogs({ dialogs, messages, addMessage }) {\r\n    const dialogsList = dialogs\r\n        .map(dialogItem => <Dialog name={dialogItem.name} key={dialogItem.id} id={dialogItem.id} />)\r\n    const messagesList = messages\r\n        .map(messageItem => <Message text={messageItem.text} key={messageItem.id} />)\r\n    let submit = value => {\r\n        addMessage(value.newMessageText)\r\n    }\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogs_items}>\r\n            {dialogsList}\r\n        </div>\r\n        <div>\r\n            <div className={s.messages}>\r\n                {messagesList}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={submit} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Dialogs\r\n","import { sendMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = ({ dialogsReducer }) => {\r\n    return {\r\n        dialogs: dialogsReducer.dialogs,\r\n        messages: dialogsReducer.messages,\r\n        newMessageText: dialogsReducer.newMessageText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: text => dispatch(sendMessageActionCreator(text))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)\r\n"],"sourceRoot":""}